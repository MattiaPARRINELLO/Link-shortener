<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Login</title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
    />
    <style>
      body {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        background-color: #f0f2f5;
        font-family: Arial, sans-serif;
      }
      .login-container {
        background: #fff;
        padding: 2rem;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 400px;
      }
      .login-container h2 {
        margin-bottom: 1.5rem;
        color: #333;
      }
      .input-group {
        margin-bottom: 1rem;
      }
      .input-group label {
        display: block;
        margin-bottom: 0.5rem;
        color: #555;
      }
      .input-group input {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #ddd;
        border-radius: 4px;
        outline: 2px solid #007bff; /* Default outline */
      }
      .login-btn {
        width: 100%;
        padding: 0.75rem;
        background-color: #007bff;
        border: none;
        border-radius: 4px;
        color: #fff;
        font-size: 1rem;
        cursor: pointer;
      }
      .login-btn:hover {
        background-color: #0056b3;
      }
      .login-container .social-login {
        display: flex;
        justify-content: space-between;
        margin-top: 1rem;
      }
      .social-login a {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 48%;
        padding: 0.75rem;
        border-radius: 4px;
        text-decoration: none;
        color: #fff;
      }
      .social-login a.facebook {
        background-color: #3b5998;
      }
      .social-login a.google {
        background-color: #db4437;
      }
    </style>
  </head>
  <body>
    <div class="login-container">
      <h2>Login</h2>
      <div class="input-group">
        <label for="username">Username</label>
        <input
          type="text"
          id="username"
          name="username"
          placeholder="verryOriginalUsername"
          required
        />
      </div>
      <div class="input-group">
        <label for="password">Password</label>
        <input
          type="password"
          id="password"
          name="password"
          placeholder="SuperSecretPassword"
          required
        />
      </div>
      <button class="login-btn">Login</button>
    </div>
  </body>
</html>
<script>
  document.querySelectorAll(".input-group input").forEach((input) => {
    input.addEventListener("focus", () => {
      input.style.transition = "all 0.3s ease";
      input.style.transform = "scale(1.05)";
      input.style.boxShadow = "0 4px 8px rgba(0, 0, 0, 0.1)";
    });

    input.addEventListener("blur", () => {
      input.style.transition = "all 0.3s ease";
      input.style.transform = "scale(1)";
      input.style.boxShadow = "none";
    });
  });

  document.querySelector(".login-btn").addEventListener("click", async (e) => {
    e.preventDefault();
    console.log("clicked");
    const username = document.getElementById("username").value;
    const password = document.getElementById("password").value;

    if (username && password) {
      const hashedPassword = await hashPassword(password);

      fetch("/auth", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          username,
          password: hashedPassword,
        }),
      }).then((res) => {
        if (res.redirected) {
          window.location.href = res.url;
        }
      });
    } else {
      alert("Please fill in all fields");
    }
  });

  async function hashPassword(pass) {
    const msgUint8 = new TextEncoder().encode(pass);
    const hashBuffer = await crypto.subtle.digest("SHA-256", msgUint8);
    const hashArray = Array.from(new Uint8Array(hashBuffer));
    const hashHex = hashArray
      .map((b) => b.toString(16).padStart(2, "0"))
      .join("");
    return hashHex;
  }
</script>
